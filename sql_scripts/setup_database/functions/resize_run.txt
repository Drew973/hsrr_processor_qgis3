--redo resized run by deleting then reinserting all sections in run.
--delete then insert avoids problems if pieces/req changed.

CREATE OR REPLACE FUNCTION hsrr.resize_run(rn varchar) 
	RETURNS void AS $$
	declare
		sects varchar[]=array(select distinct sec from hsrr.routes where run=rn);--sections in run
	BEGIN
	--delete and reinsert any sections in run
	delete from hsrr.resized where sec=any(sects);
	
	insert into hsrr.resized(sec,reversed,xsp,s_ch,e_ch,RL,vals,lengths,geom)
	select p.sec,p.reversed,p.xsp,s_ch,e_ch,array_agg(pk) as pks,avg(sfc) as sfc,geom
	from (select * from pieces where sec=any(sects)) as p left join fitted on fitted.sec=p.sec and fitted.xsp=p.xsp and fitted.reversed=p.reversed and s_ch<=sec_ch and sec_ch<=e_ch
	group by p.sec,p.reversed,p.xsp,s_ch,e_ch,geom;

		-- within 10m either side where no sfc in range 
	update resized set (pks,sfc)=
	(select array_agg(pk),avg(sfc) from fitted where fitted.sec=resized.sec and fitted.xsp=resized.xsp and fitted.reversed=resized.reversed and s_ch-10<=sec_ch and sec_ch<=e_ch+10	)
	where sec=any(sects) and sfc is null;						
						 	
																			  
	END;			
$$ LANGUAGE plpgsql;
							